toolsets = gnu vs2008 vs2010;

vs2008.solutionfile = generated_files_vs2008.sln;

program test {
    sources {
        main.cpp
        gensrc.txt
        gensrc2.txt
        @builddir/gensrc.cpp
        @builddir/gensrc2.cpp
    }
    headers {
        gensrc_hdr.txt
        @builddir/gensrc.h
        @builddir/gensrc2.h
    }

    includedirs += @builddir;

    gensrc.txt::compile-commands = "python make_gensrc.py --source %(out) %(in)";
    gensrc.txt::compile-message = "Running make_gensrc.py to generate %(out)";
    gensrc.txt::dependencies = make_gensrc.py;
    gensrc.txt::outputs = @builddir/gensrc.cpp;

    gensrc_hdr.txt::compile-commands = "python make_gensrc.py --header %(out) %(in)";
    gensrc_hdr.txt::compile-message = "Running make_gensrc.py to generate %(out)";
    gensrc_hdr.txt::dependencies = make_gensrc.py;
    gensrc_hdr.txt::outputs = @builddir/gensrc.h;

    gensrc2.txt::compile-commands = "python make_gensrc.py --both %(out0) %(in)";
    gensrc2.txt::compile-message = "Running make_gensrc.py to generate %(out).cpp and %(out).h";
    gensrc2.txt::dependencies = make_gensrc.py;
    gensrc2.txt::outputs = @builddir/gensrc2.cpp @builddir/gensrc2.h;

    main.cpp::dependencies = @builddir/gensrc.h @builddir/gensrc2.h;
}
